<!DOCTYPE html>
<html lang="en" data-change="1">

<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>k3 | Management</title>
  <link rel="stylesheet"
    href="https://fonts.googleapis.com/css?family=Source+Sans+Pro:300,400,400i,700&display=fallback">
  <link rel="stylesheet" href="/plugins/fontawesome-free/css/all.min.css">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
  <link rel="stylesheet" href="/plugins/overlayScrollbars/css/OverlayScrollbars.min.css">
  <link rel="stylesheet" href="/dist/css/adminlte.min.css">
  <link rel="stylesheet" href="/css/pages__parity.css">
  <link rel="stylesheet" href="/css/vantjs.css">
  <link href="//cdn.jsdelivr.net/npm/@sweetalert2/theme-dark@4/dark.css" rel="stylesheet">
  <script src="https://cdn.socket.io/4.4.1/socket.io.min.js"
    integrity="sha384-fKnu0iswBIqkjxrhQCTZ7qlLHOFEgNkRmK2vaO/LbTZSXdJfAu6ewRBdwHPhBo/H"
    crossorigin="anonymous"></script>
  <link rel="stylesheet" href="/css/admin.css">

  <style>
    .box-xs {
      display: flex;
      justify-content: center;
      align-items: center;
      text-align: center;
      width: 18px !important;
      height: 18px;
      border: 1px solid #bbb;
      border-radius: 18px;
      margin-right: 4px;
      color: #bbb;
      background-color: #222121;
    }

    .active {
      background-color: #007bff !important;
    }

    /* Chrome, Safari, Edge, Opera */

    input::-webkit-outer-spin-button,
    input::-webkit-inner-spin-button {
      -webkit-appearance: none;
      margin: 0;
    }

    /* Firefox */

    input[type=number] {
      -moz-appearance: textfield;
    }

    #list-orders .item {
      padding: 5px 0;
      text-align: center;
    }

    .box .li[data-v-a9660e98] {
      display: block;
      height: 13px;
      width: 13px;
      border-radius: 50%;
      margin: 0 0.13333rem;
    }

    .block-click {
      pointer-events: none;
    }

    .van-col .goItem .c-tc .green {
      background-color: #5cba47;
    }

    .van-col .goItem .c-tc .red {
      background-color: #fb4e4e;
    }

    .van-col .goItem .c-tc .violet {
      background-color: #eb43dd;
    }

    .van-col .c-tc .green {
      color: #5cba47;
    }

    .van-col .c-tc .red {
      color: #fb4e4e;
    }

    .van-col .c-tc .violet {
      color: #eb43dd;
    }

    .goItem .c-row-center {
      display: flex;
      justify-content: center;
    }

    .game {
      background-color: #e67e22 !important;
      cursor: pointer;
    }

    .cursor-pointer {
      cursor: pointer;
    }

    .active-game {
      color: rgb(230, 126, 34);
      font-weight: 600;
    }
    body {
            font-family: Arial, sans-serif;
            background-color: #f5f5f5;
            display: flex;
            justify-content: center;
            padding: 20px;
        }
        .container {
            background-color: #474152;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        }
        table {
            border-collapse: collapse;
            width: 100%;
            margin-bottom: 20px;
        }
        th, td {
            border: 1px solid #ddd;
            padding: 8px 12px;
            text-align: center;
        }
        th {
            background-color: #474152;
            font-weight: bold;
        }
        td.name-cell {
            font-weight: bold;
            background-color: #f9f9f9;
            text-align: left;
        }
        tr:not(:first-child) td {
            background-color: #474152;
        }
  </style>
</head>

<body class="hold-transition dark-mode sidebar-mini layout-fixed layout-navbar-fixed layout-footer-fixed">
  <div class="wrapper">
    <%- include('nav') %>
      <div class="content-wrapper">
        <div class="content-header">
          <div class="container-fluid">
            <div class="row mb-2">
              <div class="col-sm-6">
                <h1 class="m-0">Dashboard V5</h1>
              </div>
            </div>
          </div>
        </div>
        <section class="content">
          <div class="container-fluid">
            <div class="row info-box" id="manage">
              <div class="col-12 col-sm-6 col-md-3 cursor-pointer block-click" data="1">
                <div class="info-box mb-3">
                  <span class="info-box-icon elevation-1 bg-primary game">1M</span>

                  <div class="info-box-content active-game">
                    <span class="info-box-text">K3 1 min</span>
                  </div>
                </div>
              </div>
              <div class="col-12 col-sm-6 col-md-3 cursor-pointer" data="3">
                <div class="info-box mb-3">
                  <span class="info-box-icon elevation-1 bg-primary game">3M</span>

                  <div class="info-box-content">
                    <span class="info-box-text">K3 3 min</span>
                  </div>
                </div>
              </div>
              <div class="col-12 col-sm-6 col-md-3 cursor-pointer" data="5">
                <div class="info-box mb-3">
                  <span class="info-box-icon elevation-1 bg-primary game">5M</span>

                  <div class="info-box-content">
                    <span class="info-box-text">K3 5 min</span>
                  </div>
                </div>
              </div>
              <div class="col-12 col-sm-6 col-md-3 cursor-pointer" data="10">
                <div class="info-box">
                  <span class="info-box-icon elevation-1 bg-primary game">10M</span>
                  <div class="info-box-content">
                    <span class="info-box-text">K3 10 min</span>
                  </div>
                </div>
              </div>
            </div>
            <!-- <div class="row">
              <div class="col-12 col-sm-6 col-md-3">
                <div class="info-box mb-3">
                  <span class="info-box-icon bg-danger elevation-1">
                    <i class="fas fa-shopping-cart"></i>
                  </span>

                  <div class="info-box-content">
                    <span class="info-box-text">Total number</span>
                    <span totalMoney="0" class="info-box-number" id="total">0</span>
                  </div>
                </div>
              </div>
              <div class="clearfix hidden-md-up"></div>

              <div class="col-12 col-sm-6 col-md-3">
                <div class="info-box mb-3">
                  <span class="info-box-icon elevation-1" style="background-color: #8e44ad;"><i
                      class="fas fa-shopping-cart"></i></span>
                  <div class="info-box-content">
                    <span class="info-box-text">2 Matching Numbers</span>
                    <span totalMoney="0" class="info-box-number" id="2-so-trung">0</span>
                  </div>
                </div>
              </div>
              <div class="col-12 col-sm-6 col-md-3">
                <div class="info-box mb-3">
                  <span class="info-box-icon bg-success elevation-1">
                    <i class="fas fa-shopping-cart"></i>
                  </span>

                  <div class="info-box-content">
                    <span class="info-box-text">3 Matching Numbers</span>
                    <span totalMoney="0" class="info-box-number" id="3-so-trung">0</span>
                  </div>
                </div>
              </div>
              <div class="col-12 col-sm-6 col-md-3">
                <div class="info-box">
                  <span class="info-box-icon bg-info elevation-1">
                    <i class="fas fa-shopping-cart"></i>
                  </span>

                  <div class="info-box-content">
                    <span class="info-box-text">Different Numbers</span>
                    <span totalMoney="0" class="info-box-number" id="khac-so">0</span>
                  </div>
                </div>
              </div>
            </div> -->
           
            <!-- this start from total -->
            <div class="container">
              <div>Total Game</div>
              <table>
                  <thead>
                      <tr>
                        <td>Operation</td>
                          <th>Big</th>
                          <th>Small</th>
                          <th>Odd</th>
                          <th>even</th>
                          <th>3</th>
                          <th>4</th>
                          <th>5</th>
                          <th>6</th>
                          <th>7</th>
                          <th>8</th>
                          <th>9</th>
                          <th>10</th>
                          <th>11</th>
                          <th>12</th>
                          <th>13</th>
                          <th>14</th>
                          <th>15</th>
                          <th>16</th>
                          <th>17</th>
                          <th>18</th>
                      </tr>
                  </thead>
                  <tbody>
                      <tr>
                          <td>Joint count</td>
                          <td>0</td>
                          <td>0</td>
                          <td>0</td>
                          <td>0</td>
                          <td>0</td>
                          <td>0</td>
                          <td>0</td>
                          <td>0</td>
                          <td>0</td>
                          <td>0</td>
                          <td>0</td>
                          <td>0</td>
                          <td>0</td>
                          <td>0</td>
                          <td>0</td>
                          <td>0</td>
                          <td>0</td>
                          <td>0</td>
                          <td>0</td>
                          <td>0</td>
                         
                        </tr>
                        <tr>
                          <td>Total amount</td>
                          <td>0</td>
                          <td>0</td>
                          <td>0</td>
                          <td>0</td>
                          <td>0</td>
                          <td>0</td>
                          <td>0</td>
                          <td>0</td>
                          <td>0</td>
                          <td>0</td>
                          <td>0</td>
                          <td>0</td>
                          <td>0</td>
                          <td>0</td>
                          <td>0</td>
                          <td>0</td>
                          <td>0</td>
                          <td>0</td>
                          <td>0</td>
                          <td>0</td>
                         
                      </tr>
                      <!-- <tr>
                          <td class="name-cell">Aman</td>
                          <td>0</td>
                          <td>0</td>
                          <td>0</td>
                          <td>0</td>
                          <td>0</td>
                          <td>0</td>
                          <td>0</td>
                          <td>0</td>
                          <td>0</td>
                          <td>0</td>
                          <td>0</td>
                          <td>0</td>
                          <td>0</td>
                      </tr> -->
                  </tbody>
              </table>
          </div>
            <!-- this end from total -->

            
            <!-- this start for two some -->
            <div class="container container_two_some_first">
              <div>2 some first game</div>
              <table>
                  <thead>
                      <tr>
                        <td>Operation</td>
                          <th>11</th>
                          <th>22</th>
                          <th>33</th>
                          <th>44</th>
                          <th>55</th>
                          <th>66</th>
                         
                      </tr>
                  </thead>
                  <tbody>
                      <tr>
                          <td>Joint count</td>
                          <td>0</td>
                          <td>0</td>
                          <td>0</td>
                          <td>0</td>
                          <td>0</td>
                          <td>0</td>
                          
                        
                      </tr>
                      <tr>
                          <td>Total amount</td>
                          <td>0</td>
                          <td>0</td>
                          <td>0</td>
                          <td>0</td>
                          <td>0</td>
                          <td>0</td>
                          
                      </tr>
                    
                  </tbody>
              </table>
          </div>
          <div class="container container_two_some_second">
            <div>2 some (2nd game)</div>
            <table>
                <thead>
                    <tr>
                      <td>Operation</td>
                        <th>11</th>
                        <th>22</th>
                        <th>33</th>
                        <th>44</th>
                        <th>55</th>
                        <th>66</th>
                        <th>1</th>
                        <th>3</th>
                        <th>4</th>
                        <th>5</th>
                        <th>6</th>
                     
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td>Joint count</td>
                        <td>0</td>
                        <td>0</td>
                        <td>0</td>
                        <td>0</td>
                        <td>0</td>
                        <td>0</td>
                        <td>0</td>
                        <td>0</td>
                        <td>0</td>
                        <td>0</td>
                        <td>0</td>
                        <td>0</td>
                     
                    </tr>
                    <tr>
                        <td>Total amount</td>
                        <td>0</td>
                        <td>0</td>
                        <td>0</td>
                        <td>0</td>
                        <td>0</td>
                        <td>0</td>
                        <td>0</td>
                        <td>0</td>
                        <td>0</td>
                        <td>0</td>
                        <td>0</td>
                        <td>0</td>
                    
                    </tr>
                 
                </tbody>
            </table>
        </div>
            <!-- this end for two some -->

            <!-- this start for three some -->
            <div class="container container_three_sum">
              <div>3 some</div>
              <table>
                  <thead>
                      <tr>
                        <td>Operation</td>
                          <th>111</th>
                          <th>222</th>
                          <th>333</th>
                          <th>444</th>
                          <th>555</th>
                          <th>666</th>
                         
                          <th>Any 3 number</th>
                       
                      </tr>
                  </thead>
                  <tbody>
                      <tr>
                          <td>Joint count</td>
                          <td>0</td>
                          <td>0</td>
                          <td>0</td>
                          <td>0</td>
                          <td>0</td>
                          <td>0</td>
                          <td>0</td>
                       
                      </tr>
                      <tr>
                          <td>Total amount</td>
                          <td>0</td>
                          <td>0</td>
                          <td>0</td>
                          <td>0</td>
                          <td>0</td>
                          <td>0</td>
                          <td>0</td>
                         
                         
                      
                      </tr>
                   
                  </tbody>
              </table>
          </div>
            <!-- this end for three some -->

            <!-- this start for different -->
           <!-- Add the table structure for "Different" -->
<div class="container container_different">
  <div>Different</div>
  <table>
    <thead>
      <tr>
        <th>Operation</th>
        <th>Joint Count</th>
        <th>Total Amount</th>
      </tr>
    </thead>
    <tbody>
      <!-- Dynamic rows will be appended here -->
    </tbody>
  </table>
</div>
            <!-- this end for different -->
           
            <!-- Main row -->
            <div class="row">
              <!-- Left col -->
              <div class="col-md-12">
                <!-- MAP & BOX PANE -->
                <div class="row">
                  <div class="col-md-12">
                    <div class="card direct-chat direct-chat-warning">
                      <div class="card-header">
                        <h3 class="card-title">Betting Statistics</h3>

                        <div class="card-tools">
                          <button type="button" class="btn btn-tool" data-card-widget="collapse">
                            <i class="fas fa-minus"></i>
                          </button>
                          <button type="button" class="btn btn-tool" data-card-widget="remove">
                            <i class="fas fa-times"></i>
                          </button>
                        </div>
                      </div>
                      <div class="card-body">
                        <div class="direct-chat-messages" style="min-height: 520px;">
                          <div class="direct-chat-msg">
                            <!---->
                          </div>
                        </div>
                      </div>
                      <div class="card-footer"></div>
                    </div>
                  </div>
                </div>
                <div class="row">
                  <div class="col-md-12">
                    <div class="card card-primary">
                      <div class="card-header" style="text-align: center;">
                        <div data-v-04e3b381="" class="reservation-chunk-sub-num"> Loading... </div>
                        <div data-v-7d40872f="" class="time" style="font-size: 23px;border-radius: none;">
                          <span data-v-7d40872f="" class="time-sub" style="border-radius: 0;">0</span>
                          <span data-v-7d40872f="" class="time-sub" style="border-radius: 0;">0</span>
                          <span data-v-7d40872f="" class="">:</span>
                          <span data-v-7d40872f="" class="time-sub" style="border-radius: 0;">4</span>
                          <span data-v-7d40872f="" class="time-sub" style="border-radius: 0;">7</span>
                        </div>
                      </div>
                      <div class="card-body" style="padding: 0;">
                        <div class="form-group">
                          <div data-v-a9660e98="" class="wrap">
                            <div data-v-a9660e98="" class="c-tc van-row"
                              style="text-align: center;border-bottom: 1px solid;padding: 6px">
                              <div data-v-a9660e98="" class="van-col van-col--8">Periods</div>
                              <div data-v-a9660e98="" class="van-col van-col--5">Result</div>
                              <div data-v-a9660e98="" class="van-col van-col--5">Big/Small</div>
                              <div data-v-a9660e98="" class="van-col van-col--5">Even/Odd</div>
                            </div>
                          </div>
                          <div id="list-orders">
                            <!---->
                          </div>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
                <div class="row">
                  <div class="col-md-12">
                    <div class="card card-primary">
                      <div class="card-header">
                        <h3 class="card-title">Adjust results</h3>
                      </div>
                      <!-- <div class="card-body">
                      <div class="form-group">
                        <b> Enter 5 numbers (e.g., 431). 431 represents 3 dice. The sum will be 4 + 3 + 1 = 8 (8 is Even) (Sum <= 10 will be 'small' and vice versa).</p>
                          <label for="editResult" id="ketQua">Next Result: Random</label>
                          <input type="text" class="form-control" id="editResult" value="" placeholder="Enter the result (eg: 15267|12048|86936)">
                      </div>
                    </div>
                    <div class="card-footer" style="text-align: center;">
                      <button type="submit" class="btn btn-primary start-order">Submit</button>
                    </div> -->
                      <div class="container mt-4">
                        <ul class="nav nav-tabs" id="gameTabs">
                          <li class="nav-item"><a class="nav-link active" data-bs-toggle="tab" href="#total">Total</a>
                          </li>
                          <li class="nav-item"><a class="nav-link" data-bs-toggle="tab" href="#two-some">Two Same</a>
                          </li>
                          <li class="nav-item"><a class="nav-link" data-bs-toggle="tab" href="#three-some">Three
                              Same</a></li>
                          <li class="nav-item"><a class="nav-link" data-bs-toggle="tab" href="#different">Different</a>
                          </li>
                        </ul>

                        <div class="tab-content">
                          <div class="tab-pane fade show active" id="total">
                            <div class="card-body">
                              <div class="form-group">
                                <div>
                                  <p>b ---> big || s ---> small || l ---> odd || c ---> even</p>
                                  <p>In the input box the input like "b" or "c" or "9"</p>
                                </div>
                                <label for="totalInput">Enter Numbers:</label>
                                <input type="text" class="form-control" id="totalInput" placeholder="Enter the result">
                              </div>
                            </div>
                            <div class="card-footer text-center">
                              <button type="submit" class="btn btn-primary">Submit</button>
                            </div>
                          </div>

                          <div class="tab-pane fade" id="two-some">
                            <div class="card-body">
                              <div class="form-group">
                                <div>
                                  <p>In the input box the input for first game 11 or 66 or 44</p>
                                  <p>In the input box the input for second game 11# to 66# and 1# to 6#</p>
                                </div>
                                <label for="twoSomeInput">Enter Numbers:</label>
                                <input type="text" class="form-control" id="twoSomeInput"
                                  placeholder="Enter the result">
                              </div>
                            </div>
                            <div class="card-footer text-center">
                              <button type="submit" class="btn btn-primary">Submit</button>
                            </div>
                          </div>

                          <div class="tab-pane fade" id="three-some">
                            <div class="card-body">
                              <div class="form-group">
                                <p>In the input box the first game input like "111" or "333" like this</p>
                                <p>In the input box the second game input like win / loss</p>
                                <label for="threeSomeInput">Enter Numbers:</label>
                                <input type="text" class="form-control" id="threeSomeInput"
                                  placeholder="Enter the result">
                              </div>
                            </div>
                            <div class="card-footer text-center">
                              <button type="submit" class="btn btn-primary">Submit</button>
                            </div>
                          </div>

                          <div class="tab-pane fade" id="different">
                            <div class="card-body">
                              <div class="form-group">
                                <p>In the input box the input like "1,2,3" or "win / loose" or "1,2"</p>
                                <label for="differentInput">Enter Numbers:</label>
                                <input type="text" class="form-control" id="differentInput"
                                  placeholder="Enter the result">
                              </div>
                            </div>
                            <div class="card-footer text-center">
                              <button type="submit" class="btn btn-primary">Submit</button>
                            </div>
                          </div>
                        </div>
                      </div>

                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </section>
      </div>
      <a id="back-to-tops" href="#" class="btn btn-primary back-to-top" role="button" aria-label="Scroll to top">
        <i class="fas fa-chevron-up"></i>
      </a>
  </div>
  <script src="/plugins/jquery/jquery.min.js"></script>
  <script src="/plugins/bootstrap/js/bootstrap.bundle.min.js"></script>
  <script src="/plugins/overlayScrollbars/js/jquery.overlayScrollbars.min.js"></script>
  <script src="//cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.js"></script>
  <script src="/dist/js/adminlte.js"></script>
  <script src="/plugins/jquery-mousewheel/jquery.mousewheel.js"></script>
  <script src="/plugins/raphael/raphael.min.js"></script>
  <script src="/k3/admin/main.js"></script>
  <script>
   document.addEventListener("DOMContentLoaded", function () {
  const tabs = document.querySelectorAll("#gameTabs .nav-link");
  const tabContents = document.querySelectorAll(".tab-pane");

  tabs.forEach((tab) => {
    tab.addEventListener("click", function (event) {
      event.preventDefault();

      // Get the target content ID
      const targetId = this.getAttribute("href");

      // Remove active classes from all tabs and contents
      tabs.forEach((t) => t.classList.remove("active"));
      tabContents.forEach((content) => content.classList.remove("show", "active"));

      // Activate the clicked tab and its content
      this.classList.add("active");
      document.querySelector(targetId).classList.add("show", "active");
    });
  });
});

  </script>
  <!-- total -->
  <script>
    document.addEventListener("DOMContentLoaded", function () {
      document.querySelector("#total .btn-primary").addEventListener("click", function () {
        const totalInput = document.getElementById("totalInput").value;

        if (!totalInput) {
          alert("Please enter a value before submitting.");
          return;
        }

        fetch("/api/webapi/admin/handle_game_win", {
          method: "POST",
          headers: {
            "Content-Type": "application/json"
          },
          // body: JSON.stringify({ result: totalInput })
          body: JSON.stringify({
            "game": 1,
            "join_bet": 1,
            "game_type": "total",
            "value": totalInput
          })
        })
          .then(response => response.json())
          .then(data => {
            alert("Response from server: " + JSON.stringify(data));
          })
          .catch(error => {
            console.error("Error:", error);
            alert("Failed to submit. Please try again.");
          });
      });
    });
  </script>
   <!-- two some -->
<script>
  document.addEventListener("DOMContentLoaded", function () {
    document.querySelector("#two-some .btn-primary").addEventListener("click", function () {
      const twoSomeInput = document.getElementById("twoSomeInput").value;

      if (!twoSomeInput) {
        alert("Please enter a value before submitting.");
        return;
      }

      fetch("/api/webapi/admin/handle_game_win", {
        method: "POST",
        headers: {
          "Content-Type": "application/json"
        },
        // body: JSON.stringify({ result: totalInput })
        body: JSON.stringify({
          "game": 1,
          "join_bet": 2,
          "game_type": "two-same",
          "value": `${twoSomeInput}@`
        })
      })
        .then(response => response.json())
        .then(data => {
          alert("Response from server: " + JSON.stringify(data));
        })
        .catch(error => {
          console.error("Error:", error);
          alert("Failed to submit. Please try again.");
        });
    });
  });
</script>
 <!-- three some -->
<script>
  document.addEventListener("DOMContentLoaded", function () {
    document.querySelector("#three-some .btn-primary").addEventListener("click", function () {
      const threeSomeInput = document.getElementById("threeSomeInput").value;

      if (!threeSomeInput) {
        alert("Please enter a value before submitting.");
        return;
      }

      fetch("/api/webapi/admin/handle_game_win", {
        method: "POST",
        headers: {
          "Content-Type": "application/json"
        },
        // body: JSON.stringify({ result: totalInput })
        body: JSON.stringify({
          "game": 1,
          "join_bet": 3,
          "game_type": "three-same",
          "value": `${threeSomeInput}@`
        })
      })
        .then(response => response.json())
        .then(data => {
          alert("Response from server: " + JSON.stringify(data));
        })
        .catch(error => {
          console.error("Error:", error);
          alert("Failed to submit. Please try again.");
        });
    });
  });
</script>

<!-- different -->
<script>
  document.addEventListener("DOMContentLoaded", function () {
    document.querySelector("#different .btn-primary").addEventListener("click", function () {
      const differentInput = document.getElementById("differentInput").value;

      if (!twoSomeInput) {
        alert("Please enter a value before submitting.");
        return;
      }

      fetch("/api/webapi/admin/handle_game_win", {
        method: "POST",
        headers: {
          "Content-Type": "application/json"
        },
        // body: JSON.stringify({ result: totalInput })
        body: JSON.stringify({
          "game": 1,
          "join_bet": 4,
          "game_type": "unlike",
          "value": `${differentInput}`
        })
      })
        .then(response => response.json())
        .then(data => {
          alert("Response from server: " + JSON.stringify(data));
        })
        .catch(error => {
          console.error("Error:", error);
          alert("Failed to submit. Please try again.");
        });
    });
  });
</script>

  <script>
    $(".start-order").click(function (e) {
      e.preventDefault();
      let game = $('html').attr('data-change');
      let value = $('#editResult').val().trim();
      let arr = value.split('|');
      for (let i = 0; i < arr.length; i++) {
        let check = isNumber(arr[i]);
        if (arr[i] == "" || arr[i].length != 3 || !check) {
          alert("Please enter the correct format (e.g., 123|456|234).");
          return false;
        }
      }
      $.ajax({
        type: "POST",
        url: "/api/webapi/admin/k3/editResult",
        data: {
          game: game,
          list: value,
        },
        dataType: "json",
        success: function (response) {
          Swal.fire(
            'Good job!',
            `${response.message}`,
            'success'
          );
          $('#ketQua').text(`Next Result: ${value}`);
        }
      });
    });
  </script>

<!-- total  -->
<script>
  document.addEventListener("DOMContentLoaded", function () {
    // Function to fetch and update table data
    function fetchAndUpdateTable() {
      fetch("/api/webapi/admin/get_bet_list_k3/1/total") // Adjust API endpoint as needed
        .then(response => response.json())
        .then(data => {
          updateTable(data);
        })
        .catch(error => {
          console.error("Error fetching data:", error);
        });
    }

    // Function to update table with API data
    function updateTable(data) {
      
      const { big_small_game, odd_even_game, number_game } = data?.bet_data;

      // Update Joint count row
      const jointCountRow = document.querySelector("tbody tr:nth-child(1)");
      jointCountRow.cells[1].textContent = big_small_game.big_bet_total_count;
      jointCountRow.cells[2].textContent = big_small_game.small_bet_total_count;
      jointCountRow.cells[3].textContent = odd_even_game.odd_bet_total_count;
      jointCountRow.cells[4].textContent = odd_even_game.even_bet_total_count;
      
 // Update number counts (3-18)
 const numberToText = [
      "three", "four", "five", "six", "seven", "eight", "nine", 
      "ten", "eleven", "twelve", "thirteen", "fourteen", 
      "fifteen", "sixteen", "seventeen", "eighteen"
    ];
    for (let i = 0; i <= 15; i++) { // Loop for 3 to 18
      jointCountRow.cells[i + 5].textContent = number_game[`${numberToText[i]}_bet_total_count`] || 0;
    }

      // Update Total amount row
      const totalAmountRow = document.querySelector("tbody tr:nth-child(2)");
      totalAmountRow.cells[1].textContent = big_small_game.big_total_bet_amount;
      totalAmountRow.cells[2].textContent = big_small_game.small_total_bet_amount;
      totalAmountRow.cells[3].textContent = odd_even_game.odd_total_bet_amount;
      totalAmountRow.cells[4].textContent = odd_even_game.even_total_bet_amount;

   
      for (let i = 0; i <= 15; i++) {
        totalAmountRow.cells[i + 5].textContent = number_game[`${numberToText[i]}_total_bet_amount`] || 0;
      }
    }

    // Fetch and update table every 2 seconds
    fetchAndUpdateTable(); // Initial fetch
    setInterval(fetchAndUpdateTable, 2000); // Call API every 2 seconds

    // Attach event listener for button click
    
  });
</script>





 <!-- For two_same -->
 <script>
  document.addEventListener("DOMContentLoaded", function () {
    // Function to update the "2 some first game" and "2 some (2nd game)" tables
    function updateInfoBoxNumbers(data) {
      // console.log("data", data);
      
      const { first_game, second_game } = data?.bet_data || {};

      const firstGameJointCountRow = document.querySelector(
  ".container_two_some_first tbody tr:nth-child(1)"
);


const firstGameTotalAmountRow = document.querySelector(
  ".container_two_some_first tbody tr:nth-child(2)"
);

      if (first_game) {
        firstGameJointCountRow.cells[1].textContent = first_game.eleven_bet_total_count || 0;
        firstGameJointCountRow.cells[2].textContent = first_game.twenty_two_bet_total_count || 0;
        firstGameJointCountRow.cells[3].textContent = first_game.thirthy_three_bet_total_count || 0;
        firstGameJointCountRow.cells[4].textContent = first_game.fourty_four_bet_total_count || 0;
        firstGameJointCountRow.cells[5].textContent = first_game.fifty_five_bet_total_count || 0;
        firstGameJointCountRow.cells[6].textContent = first_game.sixty_six_bet_total_count || 0;

        firstGameTotalAmountRow.cells[1].textContent = first_game.eleven_total_bet_amount || 0;
        firstGameTotalAmountRow.cells[2].textContent = first_game.twenty_two_total_bet_amount || 0;
        firstGameTotalAmountRow.cells[3].textContent = first_game.thirthy_three_total_bet_amount || 0;
        firstGameTotalAmountRow.cells[4].textContent = first_game.fourty_four_total_bet_amount || 0;
        firstGameTotalAmountRow.cells[5].textContent = first_game.fifty_five_total_bet_amount || 0;
        firstGameTotalAmountRow.cells[6].textContent = first_game.sixty_six_total_bet_amount || 0;
      }

      const secondGameJointCountRow = document.querySelector(
  ".container_two_some_second tbody tr:nth-child(1)"
);


const secondGameTotalAmountRow = document.querySelector(
  ".container_two_some_second tbody tr:nth-child(2)"
);

      if (second_game) {
        secondGameJointCountRow.cells[1].textContent = second_game.eleven_bet_total_count || 0;
        secondGameJointCountRow.cells[2].textContent = second_game.twenty_two_bet_total_count || 0;
        secondGameJointCountRow.cells[3].textContent = second_game.thirthy_three_bet_total_count || 0;
        secondGameJointCountRow.cells[4].textContent = second_game.fourty_four_bet_total_count || 0;
        secondGameJointCountRow.cells[5].textContent = second_game.fifty_five_bet_total_count || 0;
        secondGameJointCountRow.cells[6].textContent = second_game.sixty_six_bet_total_count || 0;
        secondGameJointCountRow.cells[7].textContent = second_game.one_bet_total_count || 0;
        secondGameJointCountRow.cells[8].textContent = second_game.two_bet_total_count || 0;
        secondGameJointCountRow.cells[9].textContent = second_game.three_bet_total_count || 0;
        secondGameJointCountRow.cells[10].textContent = second_game.four_bet_total_count || 0;
        secondGameJointCountRow.cells[11].textContent = second_game.five_bet_total_count || 0;
        secondGameJointCountRow.cells[12].textContent = second_game.six_bet_total_count || 0;

        secondGameTotalAmountRow.cells[1].textContent = second_game.eleven_total_bet_amount || 0;
        secondGameTotalAmountRow.cells[2].textContent = second_game.twenty_two_total_bet_amount || 0;
        secondGameTotalAmountRow.cells[3].textContent = second_game.thirthy_three_total_bet_amount || 0;
        secondGameTotalAmountRow.cells[4].textContent = second_game.fourty_four_total_bet_amount || 0;
        secondGameTotalAmountRow.cells[5].textContent = second_game.fifty_five_total_bet_amount || 0;
        secondGameTotalAmountRow.cells[6].textContent = second_game.sixty_six_total_bet_amount || 0;
        secondGameTotalAmountRow.cells[7].textContent = second_game.one_total_bet_amount || 0;
        secondGameTotalAmountRow.cells[8].textContent = second_game.two_total_bet_amount || 0;
        secondGameTotalAmountRow.cells[9].textContent = second_game.three_total_bet_amount || 0;
        secondGameTotalAmountRow.cells[10].textContent = second_game.four_total_bet_amount || 0;
        secondGameTotalAmountRow.cells[11].textContent = second_game.five_total_bet_amount || 0;
        secondGameTotalAmountRow.cells[12].textContent = second_game.six_total_bet_amount || 0;
      }
    }

    // Fetch data periodically and update the tables
    setInterval(() => {
      fetch("/api/webapi/admin/get_bet_list_k3/1/two_same")
        .then((response) => response.json())
        .then((newData) => {
          updateInfoBoxNumbers(newData);
        })
        .catch((error) => console.error("Error fetching data:", error));
    }, 2000); // Update every 2 seconds
  });
</script>

 <!-- For three_same -->
 <script>
  document.addEventListener("DOMContentLoaded", function () {
    // Function to update the "Three Some" table
    function updateThreeSomeTable(data) {
      const { first_game, second_game } = data?.bet_data || {};

      // Select the rows for "Joint count" and "Total amount"
      const jointCountRow = document.querySelector(".container_three_sum tbody tr:nth-child(1)");
      const totalAmountRow = document.querySelector(".container_three_sum tbody tr:nth-child(2)");

      if (first_game) {
        // Update "Joint count" row
        jointCountRow.cells[1].textContent = first_game.one_hundred_eleven_bet_total_count || 0;
        jointCountRow.cells[2].textContent = first_game.two_hundred_twenty_two_bet_total_count || 0;
        jointCountRow.cells[3].textContent = first_game.three_hundred_thirthy_three_bet_total_count || 0;
        jointCountRow.cells[4].textContent = first_game.four_hundred_fourty_four_bet_total_count || 0;
        jointCountRow.cells[5].textContent = first_game.five_hundred_fifty_five_bet_total_count || 0;
        jointCountRow.cells[6].textContent = first_game.six_hundred_sixty_six_bet_total_count || 0;

        // Update "Total amount" row
        totalAmountRow.cells[1].textContent = first_game.one_hundred_eleven_total_bet_amount || 0;
        totalAmountRow.cells[2].textContent = first_game.two_hundred_twenty_two_total_bet_amount || 0;
        totalAmountRow.cells[3].textContent = first_game.three_hundred_thirthy_three_total_bet_amount || 0;
        totalAmountRow.cells[4].textContent = first_game.four_hundred_fourty_four_total_bet_amount || 0;
        totalAmountRow.cells[5].textContent = first_game.five_hundred_fifty_five_total_bet_amount || 0;
        totalAmountRow.cells[6].textContent = first_game.six_hundred_sixty_six_total_bet_amount || 0;
      }

      if (second_game) {
        // Update "Any 3 number" column
        jointCountRow.cells[7].textContent = second_game.three_same_bet_total_count || 0;
        totalAmountRow.cells[7].textContent = second_game.three_same_total_bet_amount || 0;
      }
    }

    // Fetch data periodically and update the "Three Some" table
    setInterval(() => {
      fetch("/api/webapi/admin/get_bet_list_k3/1/three_same")
        .then((response) => response.json())
        .then((data) => {
          updateThreeSomeTable(data);
        })
        .catch((error) => console.error("Error fetching data:", error));
    }, 2000); // Update every 2 seconds
  });
</script>

<!-- For unlike -->
<script>
  document.addEventListener("DOMContentLoaded", function () {
    // Function to update the "Different" table dynamically
    function updateDifferentTable(data) {
      const tableBody = document.querySelector(".container_different tbody");

      // Clear existing rows
      tableBody.innerHTML = "";

      // Loop through the API response and create rows dynamically
      for (const key in data) {
        if (data.hasOwnProperty(key)) {
          const { bet_total_count, total_bet_amount } = data[key];

          // Create a new row
          const row = document.createElement("tr");

          // Create and append the "Operation" cell
          const operationCell = document.createElement("td");
          operationCell.textContent = key;
          row.appendChild(operationCell);

          // Create and append the "Joint count" cell
          const jointCountCell = document.createElement("td");
          jointCountCell.textContent = bet_total_count || 0;
          row.appendChild(jointCountCell);

          // Create and append the "Total amount" cell
          const totalAmountCell = document.createElement("td");
          totalAmountCell.textContent = total_bet_amount || 0;
          row.appendChild(totalAmountCell);

          // Append the row to the table body
          tableBody.appendChild(row);
        }
      }
    }

    // Fetch data periodically and update the "Different" table
    setInterval(() => {
      fetch("/api/webapi/admin/get_bet_list_k3/1/unlike")
        .then((response) => response.json())
        .then((data) => {
          updateDifferentTable(data?.bet_data);
        })
        .catch((error) => console.error("Error fetching data:", error));
    }, 2000); // Update every 2 seconds
  });
</script>





</body>

</html>